parameters:
  - name: azureResourceManagerConnection
    type: string
  - name: subscriptionId
    type: string
  - name: resourceGroupName
    type: string
  - name: buildDrop
    type: string
  - name: staticSiteName
    type: string
  - name: apiName
    type: string
  - name: location
    type: string
  - name: environment
    type: string
    
jobs: 
  - job:
    steps:
      - checkout: none # Skip checkout step
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'specific'
          #project guid
          project: '[Your ADO project GUID]'
          #the pipeline id
          definition: '[Your ADO build id]'
          specificBuildWithTriggering: true
          buildVersionToDownload: 'latest'
          artifactName: 'drop'
      - task: AzureCLI@2
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            $rg = "rg-${{ parameters.resourceGroupName }}-${{ parameters.environment }}-${{ parameters.location }}"
            write-host $rg
            Write-Host "##vso[task.setvariable variable=resourceGroupName]$rg"
            az group create --name "$rg" -l "${{ parameters.location }}"

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Create API'
        inputs:
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: $(resourceGroupName)
          location: ${{ parameters.location }}
          csmFile: '${{ parameters.buildDrop }}/azure-deployments/api.bicep'
          overrideParameters: '-siteName ${{ parameters.apiName }} -appServicePlanName "blazor-demo" -environment ${{ parameters.environment }}'
          deploymentOutputs: 'apiOutputs'
      - task: PowerShell@2
        displayName: 'Parse ARM apiOutputs'
        inputs:
          filePath: '${{ parameters.buildDrop }}/azure-deployments/parse-arm-outputs.ps1'
          pwsh: true
          arguments: "-DeploymentOutputs '$(apiOutputs)'"
      - task: AzureRmWebAppDeployment@4
        displayName: 'Deploy API'
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          resourceGroupName: $(resourceGroupName)
          appType: 'webAppLinux'
          WebAppName: $(appServiceName)
          packageForLinux: '${{ parameters.buildDrop }}/BlazorDemo.API.zip'
          RuntimeStack: 'DOTNETCORE|7.0'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Create Web'
        inputs:
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: $(resourceGroupName)
          location: 'East US 2'
          csmFile: '${{ parameters.buildDrop }}/azure-deployments/static.bicep'
          overrideParameters: '-siteName ${{ parameters.staticSiteName }} -environment ${{ parameters.environment }}'
          deploymentOutputs: 'staticOutputs'
      - task: PowerShell@2
        displayName: 'Parse ARM staticOutputs'
        inputs:
          filePath: '${{ parameters.buildDrop }}/azure-deployments/parse-arm-outputs.ps1'
          pwsh: true
          arguments: "-DeploymentOutputs '$(staticOutputs)'"
    
      - task: ExtractFiles@1
        displayName: 'Extract Web'
        inputs:
          archiveFilePatterns: '${{ parameters.buildDrop }}/BlazorDemo.Web.zip'
          destinationFolder: '${{ parameters.buildDrop }}/BlazorDemo.Web'
          
      - task: PowerShell@2
        displayName: 'Copy Specific Config'
        inputs:
          pwsh: true
          targetType: 'inline'
          script: |
            $source = "${{ parameters.buildDrop }}/web-settings/appsettings.${{ parameters.environment }}.json"
            $destination = "${{ parameters.buildDrop }}/BlazorDemo.Web/wwwroot/appsettings.json"
            Copy-Item -Path $source -Destination $destination 

      - task: AzureCLI@2
        displayName: 'Get Static Web token'
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            $token = (az staticwebapp secrets list -n $(staticSiteName) --query "properties.apiKey").replace('"','')
            Write-Host "##vso[task.setvariable variable=apiToken]$token"
      - task: AzureStaticWebApp@0
        displayName: 'Static Web App'
        inputs:
          workingDirectory: '${{ parameters.buildDrop }}/BlazorDemo.Web'
          app_location: wwwroot
          skip_app_build: true
          skip_api_build: true
          is_static_export: false
          verbose: false
          azure_static_web_apps_api_token: $(apiToken)